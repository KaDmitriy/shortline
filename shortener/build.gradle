plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kda.shortline.shortener'
version = '0.0.1-SNAPSHOT'
def appfilename = "shortener-${version}.jar"
def dockerdir = "../docker/shortener"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar.doLast {
	
	copy {
		from "${buildDir}/libs/"
		into dockerdir + "/rootfs"
		include appfilename
		// rename(nameapp, "content.jar")
	}
	new File(projectDir, dockerdir+"/rootfs/version").text = """Version: ${version}
Application-fullname: ShortLine-Content
Application-file: ${appfilename}
"""
}


clean.doFirst {
	//delete dockerdir+"/rootfs/"+appfilename
	delete dockerdir+"/rootfs/version"
	
	def delfiles = new HashSet()
    new File(projectDir, dockerdir+"/rootfs/").eachFile { file ->
        if (file.isDirectory() || (file.name ==~ /(.*)\.jar/)) {
            delfiles << file
            project.logger.error('files del:'+file)
        } 
    }
	delete delfiles
	
}
